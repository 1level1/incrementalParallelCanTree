\begin{thebibliography}{10}

\bibitem{agrawal1994quest}
Rakesh Agrawal and Ramakrishnan Srikant.
\newblock Quest synthetic data generator.
\newblock {\em IBM Almaden Research Center}, 1994.

\bibitem{agrawal1994fast}
Rakesh Agrawal, Ramakrishnan Srikant, et~al.
\newblock Fast algorithms for mining association rules.
\newblock In {\em Proc. 20th int. conf. very large data bases, VLDB}, volume
  1215, pages 487--499, 1994.

\bibitem{mahoot}
Apache.
\newblock The apache mahout machine learning library,.
\newblock URL: \url{http://mahout.apache.org/}.

\bibitem{hadoop}
Apache.
\newblock The apache™ hadoop® project develops open-source software for
  reliable, scalable, distributed computing.
\newblock URL: \url{https://hadoop.apache.org/}.

\bibitem{mllib}
Apache.
\newblock Mllib is apache spark's scalable machine learning library.
\newblock URL: \url{https://spark.apache.org/mllib/}.

\bibitem{mllibpfp}
Apache.
\newblock Pfp mllib implementation.
\newblock URL:
  \url{https://github.com/apache/spark/blob/master/mllib/src/main/scala/org/apache/spark/mllib/fpm/FPGrowth.scala}.

\bibitem{songLevImplementation}
Apache.
\newblock Song implementation.
\newblock URL:
  \url{https://github.com/1level1/incrementalParallelCanTree/blob/564fcbd7fdd3662910531c5cc7a12274b5e16218/src/main/scala/levko/cantree/utils/cantreeutils.scala#L228}.

\bibitem{spark}
Apache.
\newblock Apache spark™ is a unified analytics engine for large-scale data
  processing, 2020.
\newblock URL: \url{https://spark.apache.org/}.

\bibitem{APILETTI201767}
Daniele Apiletti, Elena Baralis, Tania Cerquitelli, Paolo Garza, Fabio
  Pulvirenti, and Luca Venturini.
\newblock Frequent itemsets mining for big data: A comparative analysis.
\newblock {\em Big Data Research}, 9:67--83, 2017.
\newblock URL:
  \url{https://www.sciencedirect.com/science/article/pii/S2214579616300193},
  \href {https://doi.org/https://doi.org/10.1016/j.bdr.2017.06.006}
  {\path{doi:https://doi.org/10.1016/j.bdr.2017.06.006}}.

\bibitem{dataminingbook}
Rakesh M. Verma Ping Chen Computer Science~Department Computer and Math Science
  Dept.~University of~Houston.
\newblock The uh data mining hypertextbook, version 1.
\newblock URL:
  \url{https://www.hypertextbookshop.com/dataminingbook/public_version/contents/contents.html}.

\bibitem{SparkPerformance}
Databricks.
\newblock Apache spark, 2020.
\newblock URL: \url{https://databricks.com/spark/about}.

\bibitem{hong2008incrementally}
Tzung-Pei Hong, Chun-Wei Lin, and Yu-Lung Wu.
\newblock Incrementally fast updated frequent pattern trees.
\newblock {\em Expert Systems with Applications}, 34(4):2424--2435, 2008.

\bibitem{hunyadi2011performance}
Daniel Hunyadi.
\newblock Performance comparison of apriori and fp-growth algorithms in
  generating association rules.
\newblock In {\em Proceedings of the European computing conference}, pages
  376--381, 2011.

\bibitem{kohefficient}
Jia-Ling Koh and Shui-Feng Shieh.
\newblock An efficient approach for maintaining association rules - afpim.

\bibitem{koh2004efficient}
Jia-Ling Koh and Shui-Feng Shieh.
\newblock An efficient approach for maintaining association rules based on
  adjusting fp-tree structures.
\newblock In {\em International Conference on Database Systems for Advanced
  Applications}, pages 417--424. Springer, 2004.

\bibitem{leung2005cantree}
CK-S Leung, Quamrul~I Khan, and Tariqul Hoque.
\newblock Cantree: a tree structure for efficient incremental mining of
  frequent patterns.
\newblock In {\em Fifth IEEE International Conference on Data Mining
  (ICDM'05)}, pages 8--pp. IEEE, 2005.

\bibitem{li2008pfp}
Haoyuan Li, Yi~Wang, Dong Zhang, Ming Zhang, and Edward~Y Chang.
\newblock Pfp: parallel fp-growth for query recommendation.
\newblock In {\em Proceedings of the 2008 ACM conference on Recommender
  systems}, pages 107--114, 2008.

\bibitem{li2006fast}
Xin Li, Zhi-Hong Deng, and Shiwei Tang.
\newblock A fast algorithm for maintenance of association rules in incremental
  databases.
\newblock In {\em International Conference on Advanced Data Mining and
  Applications}, pages 56--63. Springer, 2006.

\bibitem{SparkRDMA}
Mellanox.
\newblock Sparkrdma plugin is a high-performance, scalable and efficient
  shufflemanager open-source plugin for apache spark., 2020.
\newblock URL: \url{https://www.mellanox.com/products/SparkRDMA}.

\bibitem{song2017}
Yu-Geng Song, Hui-Min Cui, and Xiao-Bing Feng.
\newblock Parallel incremental frequent itemset mining for large data.
\newblock {\em Journal of Computer Science and Technology}, 32(2):368--385,
  2017.

\bibitem{tanbeer2009efficient}
Syed~Khairuzzaman Tanbeer, Chowdhury~Farhan Ahmed, Byeong-Soo Jeong, and
  Young-Koo Lee.
\newblock Efficient single-pass frequent pattern mining using a prefix-tree.
\newblock {\em Information Sciences}, 179(5):559--583, 2009.

\bibitem{bigfim}
ua~adrem.
\newblock Dist-eclat and bigfim implementation.
\newblock URL: \url{https://github.com/ua-adrem/bigfim}.

\bibitem{setcoveralgo}
Wikipedia.
\newblock Set-cover algorithm, 1972.
\newblock URL: \url{https://en.wikipedia.org/wiki/Set_cover_problem}.

\end{thebibliography}
